// generated from rosidl_adapter/resource/msg.idl.em
// with input from vda5050_msgs/msg/Node.msg
// generated code does not contain a copyright notice

#include "vda5050_msgs/msg/Action.idl"
#include "vda5050_msgs/msg/NodePosition.idl"

module vda5050_msgs {
  module msg {
    @verbatim (language="comment", text=
      "Array of nodes to be traversed for fulfilling the order")
    struct Node {
      @verbatim (language="comment", text=
        "Unique node identification.")
      string node_id;

      @verbatim (language="comment", text=
        "Id to track the sequence of nodes and edges in an order and to" "\n"
        "simplify order updates. The variable sequence_id runs across all" "\n"
        "nodes and edges of the same order and is reset when a new order_id is" "\n"
        "issued.")
      uint32 sequence_id;

      @verbatim (language="comment", text=
        "Additional information on the node")
      string node_description;

      @verbatim (language="comment", text=
        "True indicates that the node is part of the base. False indicates" "\n"
        "that the node is part of the horizon.")
      boolean released;

      @verbatim (language="comment", text=
        "Node position")
      vda5050_msgs::msg::NodePosition node_position;

      @verbatim (language="comment", text=
        "Array of actions to be executed in node. Empty array if no actions" "\n"
        "required. An action triggered by a node will persist until changed" "\n"
        "in another node unless restricted by duration_type/duration_value.")
      sequence<vda5050_msgs::msg::Action> actions;
    };
  };
};
